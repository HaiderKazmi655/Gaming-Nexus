// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  image        String?
  bio          String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  posts        Post[]
  comments     Comment[]
  likes        Like[]
  notifications Notification[] @relation("UserNotifications")
}

model Post {
  id        String   @id @default(cuid())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  gameId    String?
  game      Game?    @relation(fields: [gameId], references: [id])
  title     String
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        String   @id @default(cuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Notification {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation("UserNotifications", fields: [userId], references: [id])
  type       String   // e.g. "like", "comment"
  message    String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
}

model Game {
  id          String   @id @default(cuid())
  title       String   @unique
  description String?
  imageUrl    String?
  category    String   // FPS, Sandbox, MMO, Battle Royale, MOBA, Indie
  categoryId  String?
  categoryRef Category? @relation(fields: [categoryId], references: [id])
  genre       String?  // Additional genre info
  platform    String?  // PC, Console, Mobile
  releaseDate DateTime?
  isTrending  Boolean  @default(false)
  playerCount Int      @default(0)
  rating      Float?   // 1-5 star rating
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  posts       Post[]
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  slug        String   @unique
  icon        String?  // Icon name or URL
  color       String?  // Hex color for category
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  games       Game[]
}
